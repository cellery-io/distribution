# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for cellery-runtime.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  celleryRuntime:
      db:
        carbon:
          username: "celleryDbUser"
          password: "celleryDBPassword"

      carbon:
        admin:
          username: "celleryRuntimeUser"
          password: "celleryRuntimePassword"

mysql:
  enabled: true
  rootPassword: "mysqlRootPass"

  ## Persist data to a persistent volume
  persistence:
    enabled: true
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "local-storage"
    accessMode: ReadWriteOnce
    size: 10Gi
    subPath: cellery_runtime_mysql
    annotations: {}

  # NFS server
  nfs:
    enabled: false
    serverIp: 10.163.138.18
    shareLocation: "/data"

  localStorage:
    enabled: true
    storagePath: "/Users/deep/tmp/cellery_mysql"


controller:
  enabled: true

apim:
  enabled: false
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      ingress.kubernetes.io/ssl-redirect: "true"
      certmanager.k8s.io/cluster-issuer: "letsencrypt-dev"
    hosts:
    - host: apim
      paths: ["/"]
    tls:
    - secretName: apim-tls
      hosts:
      - apim

idp:
  enabled: false
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      ingress.kubernetes.io/ssl-redirect: "true"
      certmanager.k8s.io/cluster-issuer: "letsencrypt-dev"
    hosts:
    - host: idp
      paths: ["/"]
    tls:
    - secretName: idp-tls
      hosts:
      - idp

observability-portal:
    enabled: false

sp-worker:
    enabled: false
